"use strict";var express=require("express"),cors=require("cors"),_require=require("uuidv4"),uuid=_require.uuid,isUuid=_require.isUuid,app=express();app.use(express.json()),app.use(cors());var repositories=[];function validateRepositoryId(r,e,s){var i=r.params.id;return isUuid(i)?s():e.status(400).json({error:"Invalid Repository ID!"})}app.use("/repositories/:id",validateRepositoryId),app.get("/repositories",function(r,e){return e.json(repositories)}),app.post("/repositories",function(r,e){var s=r.body,i=s.title,o=s.url,t=s.techs,p={id:uuid(),title:i,url:o,techs:t,likes:0};return repositories.push(p),e.json(p)}),app.put("/repositories/:id",function(r,e){var s=r.params.id,i=r.body,o=i.title,t=i.url,p=i.techs,u=repositories.findIndex(function(r){return r.id===s});if(n<0)return e.status(400).json({error:"Repository Not Found!"});var n={url:t,title:o,techs:p};return repositories[u]=n,e.json({repository:n})}),app.delete("/repositories/:id",function(r,e){var s=r.params.id,i=repositories.findIndex(function(r){return r.id===s});return i<0?e.status(400).json({error:"Repository Not Found!"}):(repositories.splice(i,1),e.status(204).send())}),app.post("/repositories/:id/like",function(r,e){var s=r.params.id,i=repositories.find(function(r){return r.id===s});return i?(i.likes+=1,e.json(i)):e.status(400).send()}),module.exports=app;